{
  "schemes": ["http"],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of our awesome API.",
    "title": "GitsService.",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/v1/",
  "paths": {
    "/{owner}/{repo}/branch/getActiveBranches": {
      "get": {
        "tags": ["branch"],
        "summary": "Provides a list of branches that have been active in the given time frame.",
        "operationId": "getActiveBranches",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Unit",
            "description": "time unit",
            "name": "unit",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "Number",
            "description": "number",
            "name": "number",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "repository name",
            "name": "repo",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetActiveBranchesResponse"
          }
        }
      }
    },
    "/{owner}/{repo}/branch/getBranchByTag": {
      "get": {
        "tags": ["branch"],
        "summary": "Provides the name of the branch from which the given tag was built.",
        "operationId": "getBranchByTag",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Tag",
            "description": "tag name",
            "name": "tag",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "repository name",
            "name": "repo",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBranchByTagResponse"
          }
        }
      }
    },
    "/{owner}/{repo}/commit/getCommitByName": {
      "get": {
        "tags": ["commit"],
        "summary": "Accepts a message about commit. Provides commit id and name.",
        "operationId": "getCommitByName",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Message",
            "description": "Message",
            "name": "message",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "Repository name",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Branch",
            "description": "Branch name",
            "name": "branch",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Personal Access Token",
            "description": "For authorization",
            "name": "personalAccessToken",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetCommitByNameResponse"
          }
        }
      }
    },
    "/{owner}/{repo}/commit/getCommitsAfter": {
      "get": {
        "tags": ["commit"],
        "summary": "Provides the commits after the given commit in the branches it is present in.",
        "operationId": "getCommitsAfter",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Commit",
            "description": "commit id",
            "name": "commit",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Number",
            "description": "number of commits",
            "name": "number",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "repository name",
            "name": "repo",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetCommitsAfterResponse"
          }
        }
      }
    },
    "/{owner}/{repo}/commit/getCommitsBefore": {
      "get": {
        "tags": ["commit"],
        "summary": "Provides the commits before the given commit in the branches it is present in.",
        "operationId": "getCommitsBefore",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Commit",
            "description": "commit id",
            "name": "commit",
            "in": "query"
          },
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "repository name",
            "name": "repo",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetCommitsBeforeResponse"
          }
        }
      }
    },
    "/{owner}/{repo}/commit/commitReleased": {
      "get": {
        "tags": ["commit"],
        "summary": "Accepts commit id and release branch name. Tells if the commit is released or not.",
        "operationId": "commitReleased",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Commit Id",
            "description": "Commit Id",
            "name": "commit_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Release Branch",
            "description": "Release Branch",
            "name": "release_branch",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "Repository name",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Personal Access Token",
            "description": "For authorization",
            "name": "personalAccessToken",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/commitReleased"
          }
        }
      }
    },
    "/{owner}/{repo}/commit/getJobsByCommit": {
      "get": {
        "tags": ["job"],
        "summary": "Accepts a commit id. Provides the CI/CD jobs associated with the given commit.",
        "operationId": "getJobsByCommit",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "commitSHA",
            "description": "commitSHA",
            "name": "commitSHA",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "repository name",
            "name": "repo",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetJobsByCommitResponse"
          }
        }
      }
    },
    "/{owner}/{repo}/tag/getChildTagsByCommit": {
      "get": {
        "tags": ["tag"],
        "summary": "Accepts a commit id as a query parameter. Provides the child tags in each branch.",
        "operationId": "getChildTagsByCommit",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "repository name",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Commit",
            "description": "commit id",
            "name": "commit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetChildTagsByCommitResponse"
          }
        }
      }
    },
    "/{owner}/{repo}/tag/getParentTagsByCommit": {
      "get": {
        "tags": ["tag"],
        "summary": "Accepts a commit id as a query parameter. Provides the nearest parent tags in each branch.",
        "operationId": "getParentTagsByCommit",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Owner",
            "description": "Owner of the repository",
            "name": "owner",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Repo",
            "description": "repository name",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Commit",
            "description": "commit id",
            "name": "commit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetParentTagsByCommitResponse"
          }
        }
      }
    },
    "/{owner}/{repo}/commit/getCommitByAuthor": {
      "get": {
        "tags": ["commit"],
        "summary": "Provides commits by the specified author in the repository.",
        "operationId": "getCommitByAuthor",
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Owner of the repository"
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          },
          {
            "name": "author",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Author username to filter commits by"
          },
          {
            "name": "personalAccessToken",
            "in": "query",
            "type": "string",
            "description": "Personal Access Token for authorization if needed",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of commits",
            "schema": {
              "$ref": "#/definitions/GetCommitByAuthorResponse"
            }
          },
          "400": {
            "description": "Bad request. Possible issues could be missing required parameters."
          },
          "401": {
            "description": "Unauthorized. Provided credentials are invalid or expired."
          },
          "404": {
            "description": "Not found. The specified owner or repository could not be found."
          },
          "500": {
            "description": "Internal server error. A problem occurred in our service."
          }
        }
      }
    }    
  },
  "definitions": {
    "GetActiveBranchesResp": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Branches"
        }
      },
      "x-go-package": "git-service/pkg/handler"
    },
    "GetBranchByTagResp": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Branches"
        }
      },
      "x-go-package": "git-service/pkg/handler"
    },
    "GetChildTagsByCommitResp": {
      "type": "object",
      "properties": {
        "Tags": {
          "description": "map[branch-name] ---\u003e [tag1, tag2, tag3...]",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "x-go-package": "git-service/pkg/handler"
    },
    "GetCommitByNameResp": {
      "type": "object",
      "x-go-package": "git-service/pkg/handler"
    },
    "GetCommitsAfterResp": {
      "type": "object",
      "properties": {
        "commits": {
          "description": "map[branch-name] ---\u003e [commit1, commit2, commit3...]",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "x-go-name": "Commits"
        }
      },
      "x-go-package": "git-service/pkg/handler"
    },
    "GetCommitsBeforeResp": {
      "type": "object",
      "properties": {
        "commits": {
          "description": "map[branch-name] ---\u003e [commit1, commit2, commit3...]",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "x-go-name": "Commits"
        }
      },
      "x-go-package": "git-service/pkg/handler"
    },
    "GetJobsByCommitResp": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "target_url": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "x-go-package": "git-service/pkg/handler"
    },
    "GetParentTagsByCommitResp": {
      "type": "object",
      "properties": {
        "Tags": {
          "description": "map[branch-name] ---\u003e tag-name",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-go-package": "git-service/pkg/handler"
    },
    "GetCommitByAuthorResp": {
      "type": "object",
      "properties": {
        "commits": {
          "description": "Map of commit IDs to their corresponding commit messages, filtered by the specified author.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Commit message associated with the commit id"
          }
        }
      },
      "x-go-package": "git-service/pkg/handler"
    }
  },
  "responses": {
    "GetActiveBranchesResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetActiveBranchesResp"
      }
    },
    "GetBranchByTagResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetBranchByTagResp"
      }
    },
    "GetChildTagsByCommitResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetChildTagsByCommitResp"
      }
    },
    "GetCommitsAfterResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetCommitsAfterResp"
      }
    },
    "GetCommitsBeforeResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetCommitsBeforeResp"
      }
    },
    "GetJobsByCommitResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetJobsByCommitResp"
      }
    },
    "GetParentTagsByCommitResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetParentTagsByCommitResp"
      }
    },
    "GetCommitByAuthorResponse": {
      "description": "Successful retrieval of commits authored by the specified user.",
      "schema": {
        "$ref": "#/definitions/GetCommitByAuthorResp"
      }
    }
  }
}
